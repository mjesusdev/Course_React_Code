{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWitoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","event","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","eventStartUpdate","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAutenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cc99ce3c.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set Active',\r\n    eventLogout : '[event] Event logout',\r\n\r\n    eventStartAddNew: '[event] Start Add new',\r\n    eventAddNew: '[event] Start Add new',\r\n    eventClearActiveEvent: '[event] Clear Active event',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded : '[event] Event loaded',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start Register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout'\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n/*     uid: null,\r\n    name: null */\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLogout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { types } from '../types/types';\r\n\r\n/* {\r\n    id: new Date().getTime(),\r\n    title: 'Cumpleaños del jefe',\r\n    start: moment().toDate(),\r\n    end: moment().add( 2, 'hours' ).toDate(),\r\n    user: {\r\n        _id: '123',\r\n        name: 'Jesus'\r\n    }\r\n} */\r\n\r\n// Create a New State\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = ( state = initialState, action ) => {\r\n    // Choose the case\r\n    switch ( action.type ) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        \r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        \r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => ( e.id === action.payload.id ) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => ( e.id !== state.activeEvent.id )\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [ ...action.payload ]\r\n            }\r\n    \r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n};\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        \r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\n\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n","import { createStore, compose, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n     rootReducer,\r\n     composeEnhancers(\r\n         applyMiddleware( thunk )\r\n     )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWitoutToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET' ) => {\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if ( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    fetchWitoutToken,\r\n    fetchWithToken\r\n}\r\n","import moment from 'moment';\r\n\r\nexport const prepareEvents = ( events = [] ) => {\r\n    return events.map(\r\n        (event) => ({\r\n            ...event,\r\n            end: moment( event.end ).toDate(),\r\n            start: moment( event.start ).toDate()\r\n        })\r\n    )\r\n}","import { types } from \"../types/types\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async ( dispatch, getState ) => {\r\n        \r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch( eventAddNew(event) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async ( dispatch ) => {\r\n        try {\r\n            const resp = await fetchWithToken(`events/${ event.id }`, event, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);    \r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = ( event ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n\r\n        try {\r\n            const resp = await fetchWithToken(`events/${ id }`, event, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);    \r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async ( dispatch ) => {\r\n        try {\r\n            \r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n            \r\n            const events = prepareEvents(body.events);\r\n            dispatch( eventLoaded(events) );\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLogout = () => ({ \r\n    type: types.eventLogout \r\n});","import { fetchWithToken, fetchWitoutToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport Swal from 'sweetalert2';\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWitoutToken( 'auth', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n        \r\n        if ( body.ok ) {\r\n            // Save Token in LocalStorage ✅\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWitoutToken('auth/new', { email, password, name }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if ( body.ok ) {\r\n            // Save Token in LocalStorage ✅\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async ( dispatch ) => {\r\n        const resp = await fetchWithToken( 'auth/renew' );\r\n        const body = await resp.json();\r\n        \r\n        if ( body.ok ) {\r\n            // Save Token in LocalStorage ✅\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n        \r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) );\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinish })\r\n\r\nconst login = ( user ) => ({ \r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'hola@jesus.com',\r\n        lPassword: '123456789'\r\n    });\r\n    \r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Nando',\r\n        rEmail: 'nando@gmail.com',\r\n        rPassword1: '12345678',\r\n        rPassword2: '12345678'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    \r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'The password should be the same');\r\n        }\r\n        \r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Login</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                                />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Register</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Name\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Password\"\r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={handleRegisterInputChange}  \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repeat the password\"\r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={handleRegisterInputChange}  \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Create account\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Exit</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\nexport const uiOpenModal = () => ({ \r\n    type: types.uiOpenModal \r\n});\r\n\r\nexport const uiCloseModal = () => ({ \r\n    type: types.uiCloseModal \r\n});","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hours');\r\nconst nowPlus1 = now.clone().add(1,'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n\r\n    const [ dateStart, setDateStart ] = useState( now.toDate() );\r\n    const [ dateEnd, setDateEnd ] = useState( nowPlus1.toDate() );\r\n    const [ titleValid, setTitleValid ] = useState( true );\r\n\r\n    const [formValues, setFormValues] = useState( initEvent );\r\n    \r\n    const { notes, title, start, end } = formValues;\r\n    \r\n    useEffect( () => {\r\n        if ( activeEvent ) {\r\n            setFormValues( activeEvent );\r\n        } else {\r\n            setFormValues( initEvent );\r\n        }\r\n    }, [activeEvent, setFormValues]);\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n    \r\n    const closeModal = () => {\r\n        // TODO: cerrar el modal\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );\r\n        // Clear the form\r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = ( event ) => {\r\n        setDateStart(event);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: event\r\n        })\r\n    }\r\n    \r\n    const handleEndDateChange = ( event ) => {\r\n        setDateEnd(event);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: event\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = ( event ) => {\r\n        event.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd   = moment( end );\r\n\r\n        if ( momentStart.isSameOrAfter( momentEnd )) {\r\n            return Swal.fire('Error', 'The end date should older than the start date ❗', 'error');\r\n        }\r\n\r\n        if ( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) {\r\n            dispatch( eventStartUpdate( formValues ) );\r\n        } else {\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen= { modalOpen }\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1 className=\"text-info\"> { ( activeEvent ) ? 'Edit Event' : 'New Event' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmitForm }\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Start Date and Hour</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className=\"form-control\"\r\n                        \r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Finally Date and Hour</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Title & notes</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${ !titleValid && 'is-invalid' }`}\r\n                        placeholder=\"Title of the Event\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">A small description</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Adittional Information</small>\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block mt-4\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Save</span>\r\n                </button>\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button \r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDelete }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Delete Event </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\n\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n/* import 'moment/locale/es'; */\r\n/* moment.locale('es'); */\r\n/* import { messages } from '../../helpers/calendar-messages-es'; */\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // TODO: Read of store, the events\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [ lastView, setlastView ] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect( () => {\r\n        \r\n        dispatch( eventStartLoading() );\r\n\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n    \r\n    const onSelectEvent = (event) => {\r\n        dispatch( eventSetActive( event ) );\r\n    }\r\n    \r\n    const onViewChange = (event) => {\r\n        setlastView( event );\r\n        localStorage.setItem('lastView', event);\r\n    }\r\n    \r\n    const onSelectSlot = (event) => {\r\n        dispatch( eventClearActiveEvent() );\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={ localizer }\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent \r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            { \r\n                ( activeEvent ) && <DeleteEventFab /> \r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                ( isAutenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAutenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ (props) => (\r\n                ( isAutenticated )\r\n                    ? ( <Redirect to=\"/\" />) \r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAutenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { startChecking } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch])\r\n\r\n    if ( checking ) {\r\n        return (<h5>Wait...</h5>);\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\"\r\n                        component={ LoginScreen } \r\n                        isAutenticated={ !!uid }\r\n                    />\r\n                    \r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen } \r\n                        isAutenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}